#!/bin/bash
set -e
VERSION=1.0.2

Usage() {
echo -e "
-----------------------------------------
CURE: \e[4mC\e[0muration of \e[4mU\e[0mltraconse\e[4mR\e[0mved \e[4mE\e[0mlements
-----------------------------------------
by VinÃ­cius Franceshini-Santos & Felipe Freitas
version "$VERSION"

\e[4mUsage\e[0m:
  CURE [Command] [args]

\e[4mCommands\e[0m:
  GeneRegion         Runs UCE curation by the GeneRegion strategy

  UCERegion          Runs UCE curation by UCERegion strategy

To see usage of any command, type:

  CURE [Command] --help

To understand the strategies, visit: https://github.com/vhfsantos/CURE"

exit
}
# Error function
error_exit() {
	msg=$1
	>&2 echo -e "\033[1;31mERROR: ${msg}\033[0m"
	Usage
}

# Check dependencies
check_deps() {
	for app in blastn parallel phyluce_align_concatenate_alignments; do
        	command -v $CONDA_PREFIX/bin/$app >/dev/null 2>&1 || \
			error_exit "Cannot find ${app} in your PATH variable\nDid you activate the cure environment?"
	done
}

# "Bye" message function (green text)
BYEmsg() {
	echo -e "\033[1;32m[ CURE v$VERSION | $(date +%Y-%m-%d" "%H:%M:%S) ] ALL DONE!\033[0m"
	echo -e "
\033[1;32mIf you make use of CURE in your research, please cite:

Freitas et al (2022). UCE phylogenomics, biogeography, and classification of long-horned 
bees (Hymenoptera: Apidae: Eucerini), with insights on using specimens with extremely 
degraded DNA. In prep.

Bye\033[0m"
}
# Check deps
check_deps

tmp=$(realpath "$0")
HOME_DIR=${tmp%/*}

# Print usage if no arg
if [ $# -eq 0 ]; then Usage; fi

# Parse commands and arguments
COMMAND=$1
ARGS=$(echo "${@:2}")

case $COMMAND in
                -h | --help )
                Usage; exit
                ;;
                GeneRegion )
                bash ${HOME_DIR}/scripts/GeneRegion.sh --version $VERSION $ARGS
                BYEmsg
                ;;
                UCERegion )
                bash ${HOME_DIR}/scripts/UCERegion.sh --version $VERSION $ARGS
                BYEmsg
                ;;
                * )
                error_exit "No command named $COMMAND."
                ;;
esac
